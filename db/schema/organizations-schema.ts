/**
 * @description
 * Defines the Drizzle schema for the `organizations` table.
 * This table stores information about partner organizations (e.g., pharma brands, hospital systems)
 * that use the platform to create branded physician finder instances.
 * It includes fields for identification, branding (name, logo, colors, copy), and standard timestamps.
 *
 * @dependencies
 * - drizzle-orm: Used for defining the table schema and types.
 * - ./users-schema: Referenced by foreign keys in related tables (e.g., organization_memberships).
 *
 * @notes
 * - The `id` is a UUID generated by the database.
 * - Branding fields allow organizations to customize the appearance of their finder instances.
 * - Timestamps track creation and last update times.
 */
import { pgTable, text, timestamp, uuid } from "drizzle-orm/pg-core"

export const organizationsTable = pgTable("organizations", {
  // Unique identifier for the organization
  id: uuid("id").primaryKey().defaultRandom(),

  // Organization's name
  name: text("name").notNull(),

  // URL or path to the organization's logo
  logoUrl: text("logo_url"),

  // Primary color theme for branding (hex code)
  primaryColor: text("primary_color"),

  // Secondary color theme for branding (hex code)
  secondaryColor: text("secondary_color"),

  // Default introductory or descriptive text for the finder instance
  defaultCopy: text("default_copy"),

  // Standard Timestamps (required by backend rules)
  createdAt: timestamp("created_at", { withTimezone: true })
    .defaultNow()
    .notNull(),
  updatedAt: timestamp("updated_at", { withTimezone: true })
    .defaultNow()
    .notNull()
    .$onUpdate(() => new Date())
})

// Infer TypeScript types from the schema for insertion and selection
export type InsertOrganization = typeof organizationsTable.$inferInsert
export type SelectOrganization = typeof organizationsTable.$inferSelect
